

class Car():

	def __init__(self):
		self.model = None 
		self.tires = None
		self.engine = None


	def __str__(self):
		return ("{} {} {}".format(self.model,self.tires,self.engine))


class Builder():

	def __init__(self):
		self.car = None 

	def create_new_car(self):
		self.car = Car()



class CarBuilder(Builder):

	def set_model(self,model_name):
		self.model = model_name

	def set_tires(self,tires):
		self.tires = tires

	def set_engine(self,engine):
		self.engine = engine


class Director():

	def __init__(self,builder_instance):
		self._builder = builder_instance

	def construct_a_new_car(self , model_name,tires,engine):
		self._builder.create_new_car()
		self._builder.set_model(model_name)
		self._builder.set_engine(tires)
		self._builder.set_tires(engine)

	def get_car(self):
		return self._builder



if __name__ == '__main__':

	tesla = CarBuilder()
	make_tesla = Director(tesla)
	make_tesla.construct_a_new_car('mkj-17','royal','hyper')
	t = make_tesla.get_car()
	print('Your car : ',t.model , "tires : ",t.tires,"engine : ",t.engine)




